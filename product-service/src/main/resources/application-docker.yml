server:
  port: 8081

spring:
  application:
    name: product-service
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://db:5432/
    username: ${POSTGRES_USER}
    password: ${POSTGRES_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: update  # Automatically create the schema (use 'create' or 'update')
    show-sql: true      # Show SQL queries in the console
  health:
    circuitbreakers:
      enabled: true
  endpoints:
    web:
      exposure:
        include: health
  endpoint:
    health:
      show-details: always
  cloud:
    function:
      definition:
    stream:
      bindings:
        stringSupplier-out-0:
          destination: stringSupplier-topic
      kafka:
        binder:
          brokers: ${BROKER_ADDRESS:broker:9092}
  #zipkin
management:
  endpoints:
    web:
      exposure:
        include: mappings,health
  tracing:
    enabled: true
    sampling:
      probability: 0.3
  zipkin:
    tracing:
      enabled: true
      endpoint: http://zipkin:9411/api/v2/spans

eureka:
  instance:
    preferIpAddress: true
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: ${EUREKA_SERVER_URL:http://eureka-Server:8761/eureka/}
    enabled: true

resilience4j.circuitbreaker:
  instances:
    product-service:
      registerHealthIndicator: true
      slidingWindowSize: 10
      failureRateThreshold: 50
      waitDurationInOpenState: 10000ms
      permittedNumberOfCallsInHalfOpenState: 5
      automaticTransitionFromOpenToHalfOpenEnabled: true
      slowCallRateThreshold: 100
      slowCallDurationThreshold: 2s
  thread-pool-bulkhead:
    instances:
      productServiceThreadPool:
        maxThreadPoolSize: 10        # Maximum size of the thread pool
        coreThreadPoolSize: 5        # Core size of the thread pool
        queueCapacity: 10            # Queue capacity for excess calls

